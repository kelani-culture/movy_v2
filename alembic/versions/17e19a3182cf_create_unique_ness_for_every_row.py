"""create unique ness for every row

Revision ID: 17e19a3182cf
Revises: be0c47d49cd1
Create Date: 2024-10-28 13:18:16.806737

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17e19a3182cf'
down_revision: Union[str, None] = 'be0c47d49cd1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('row_name', sa.String(length=1), nullable=False),
    sa.Column('seat', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'RESERVED', 'BOOKED', name='seatstatus'), nullable=False),
    sa.Column('theatre_hall_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['theatre_hall_id'], ['theatre_halls.id'], name=op.f('fk_seats_theatre_hall_id_theatre_halls')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_seats')),
    sa.UniqueConstraint('row_name', 'seat', 'theatre_hall_id', name='uq_theatre_hall_id_row_name_seat_row')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('seats')
    # ### end Alembic commands ###
